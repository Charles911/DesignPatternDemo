namespace Proxy;

/// <summary>
/// 代理模式
/// </summary>
/// <remarks>
/// 定义：
/// 就是给某一个对象提供一个代理，并由代理对象控制对原对象的引用。
/// 
/// 优点：
/// 1.代理模式能够将调用用于真正被调用的对象隔离，在一定程度上降低了系统的耦合度；
/// 2.代理对象在客户端和目标对象之间起到一个中介的作用，这样可以起到对目标对象的保护。
///   代理对象可以在对目标对象发出请求之前进行一个额外的操作，例如权限检查等。
/// 
/// 缺点：
/// 1.由于在客户端和真实主题之间增加了一个代理对象，所以会造成请求的处理速度变慢
/// 2.实现代理类也需要额外的工作，从而增加了系统的实现复杂度。
/// 
/// 附：在实际开发过程中，我们在客户端添加服务引用的时候，在客户程序中会添加一些额外的类，在客户端生成的类扮演着代理主题角色，我们客户端也是直接调用这些代理角色来访问远程服务提供的操作。这个是远程代理的一个典型例子。
/// </remarks>
class Program
{
    static void Main(string[] args)
    {
        Person proxy = new Friend();
        proxy.BuyProduct();
    }
}
